    private void uploadFile(String localImgPath) {
        String img_path = get_my_image();

        AppSyncNewPleaseWait.showDialog(VerifyAndSubmit.this, "Uploding..", 0, 0, 14000);

        File img_File = new File(img_path);
        File myFile = new File(localImgPath);
        imgFileName = myFile.getName();
        // Parsing any Media type file
        RequestBody requestBody = RequestBody.create(MediaType.parse("video/*"), myFile);
        RequestBody requestBodyImage = RequestBody.create(MediaType.parse("image/*"), img_File);

        MultipartBody.Part fileToUpload = MultipartBody.Part.createFormData("videopath", myFile.getName(), requestBody);
        MultipartBody.Part imagefileToUpload = MultipartBody.Part.createFormData("imgpath", img_File.getName(), requestBodyImage);

        HashMap<String, RequestBody> map = new HashMap<>();
        map.put("userid", createPartFromString(Admin.tinyDB.getString("id")));
        map.put("category", createPartFromString("1"));
        map.put("title", createPartFromString("" + title_edt.getText().toString()));
        map.put("news", createPartFromString("" + desc_edt.getText().toString()));
        map.put("publish", createPartFromString("1"));
        map.put("lang", createPartFromString("1"));

        ApiConfig getResponse = AppConfig.getRetrofit().create(ApiConfig.class);
        Call<ServerResponse> call = getResponse.uploadFile(fileToUpload, map, imagefileToUpload);
        call.enqueue(new Callback<ServerResponse>() {
            @Override
            public void onResponse(Call<ServerResponse> call, Response<ServerResponse> response) {
                ServerResponse serverResponse = response.body();
                if (serverResponse != null) {
                    if (serverResponse.getSuccess()) {
                        Toast.makeText(getApplicationContext(), "uploaded", Toast.LENGTH_SHORT).show();

                    } else {
                        Log.wtf("Hulk-err-76", serverResponse.getSuccess() + "");
                        Toast.makeText(getApplicationContext(), serverResponse.getSuccess() + "", Toast.LENGTH_SHORT).show();
                    }
                    AppSyncNewPleaseWait.stopDialog(VerifyAndSubmit.this);
                } else {
                    assert serverResponse != null;
                    Log.wtf("Hulk-err-81", serverResponse.toString());
                    Toast.makeText(VerifyAndSubmit.this, "109 : " + serverResponse.toString(), Toast.LENGTH_SHORT).show();
                }

                try {
                    AppSyncNewPleaseWait.stopDialog(VerifyAndSubmit.this);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }

            @Override
            public void onFailure(Call<ServerResponse> call, Throwable t) {
                finishAffinity();
                startActivity(new Intent(VerifyAndSubmit.this, MainActivity.class));
                Admin.OverrideNow(VerifyAndSubmit.this);
            }
        });
    }
